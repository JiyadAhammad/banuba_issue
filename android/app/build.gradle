plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "kotlin-parcelize"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.zinni"
    compileSdk 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.zinni"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24  
        targetSdk flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

   packagingOptions {
        pickFirst '**/libyuv.so'
        pickFirst '**/libbanuba-ve-yuv.so'

        jniLibs {
            // ! USE INSTEAD OF REMOVED android.bundle.enableUncompressedNativeLibs=false
            useLegacyPackaging = true
        }
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources false
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lint {
        baseline = file("lint-baseline.xml")
    }
}

flutter {
    source '../..'
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:32.8.0"))

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-messaging:21.1.0'
    // implementation 'com.google.android.gms:play-services-ads:22.2.0'
    implementation("com.google.firebase:firebase-auth")
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.android.play:integrity:1.1.0'
    implementation 'com.onesignal:OneSignal:[5.0.0, 5.99.99]'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    // implementation 'com.my.tracker:mytracker-sdk:3.0.9'

    // implementation('com.appodeal.ads:sdk:3.3.2.0') {
    //     // ad networks
    //     exclude group: "com.appodeal.ads.sdk.networks", module: "admob"
    //     exclude group: "org.bidon", module: "admob-adapter"
    //     exclude group: "org.bidon", module: "gam-adapter"
    //     exclude group: "com.applovin.mediation", module: "google-adapter"
    //     exclude group: "com.applovin.mediation", module: "google-ad-manager-adapter"
    //     // services
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'adjust'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'appsflyer'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'firebase'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'facebook_analytics'
    // }


    // Banuba Video Editor SDK dependencies
    // def banubaSdkVersion = '1.36.0'
    // implementation "com.banuba.sdk:ffmpeg:5.1.3"
    // implementation "com.banuba.sdk:camera-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:camera-ui-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:core-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:core-ui-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-flow-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-timeline-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-ui-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-gallery-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-effects-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:effect-player-adapter:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ar-cloud:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-audio-browser-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-export-sdk:${banubaSdkVersion}"
    // implementation "com.banuba.sdk:ve-playback-sdk:${banubaSdkVersion}"

    // // Photo Editor SDK dependency
    // // WARNING!
    // // Remove this dependency if you only use Video Editor SDK
    // def banubaPESdkVersion = '1.2.3'
    // implementation "com.banuba.sdk:pe-sdk:${banubaPESdkVersion}"
}
